# setup.py
# Author: Bruno Kremel (CERN BE-RF-FB)
# Date: 2016-11-10

"""

"""

from setuptools import setup
import subprocess
import re
import os

version_py = os.path.join(os.path.dirname(__file__), 'hdlverify', 'version.py')

REVISION_LEN = 7  # in bytes (or characters)


def read(fname):
    return open(os.path.join(os.path.dirname(__file__), fname)).read()


def get_revision(repository):
    proc = subprocess.Popen(['git', 'describe',
                             '--abbrev={0}'.format(REVISION_LEN),
                             '--always'],
                            stdout=subprocess.PIPE)
    out = proc.stdout.readline()
    exp = re.compile(r"-[0-9]+-g")
    spl = exp.split(out)
    if len(spl) > 1:
        out = spl[1]
    if out == '':
        raise IOError('Not a git repository')
    return out[:-1]

try:
    version_git = get_revision('.')
except:
    with open(version_py, 'r') as fh:
        version_git = (open(version_py).read().strip()
                       .split('=')[-1].replace('"', ''))


version_msg = ("# Do not edit this file," +
               "pipeline versioning is governed by git tags")

with open(version_py, 'w') as fh:
    fh.write(version_msg + os.linesep + "__version__='" + version_git + "'")

setup(
    name='hdlverify',
    version=version_git,
    url='',
    author=['Bruno Kremel'],
    author_email='bruno.kremel@cern.ch',
    license='Unknown',
    description='HDLVerify: Use python to verify HDL designs',
    long_description=read('README.md'),
    classifiers=[
        'Programming language :: Python',
        'Development Status :: 5 - Production/Stable',
        'Natural Language :: English'
    ],
    packages=['hdlverify']
)
